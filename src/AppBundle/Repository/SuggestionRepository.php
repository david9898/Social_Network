<?php

namespace AppBundle\Repository;

/**
 * SuggestionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SuggestionRepository extends \Doctrine\ORM\EntityRepository
{

    public function seeFullSuggestion($id)
    {
        $dql = 'SELECT s, ss, ac FROM AppBundle:Suggestion s JOIN s.suggestUser ss JOIN s.acceptUser ac WHERE s.id = :id';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $id);

        return $query->getOneOrNullResult();
    }

    public function getMySendSuggestions($id)
    {
        $dql = 'SELECT ss.id as suggestUser, sa.id as acceptUser FROM AppBundle:Suggestion s JOIN s.suggestUser ss
                JOIN s.acceptUser sa WHERE (s.suggestUser = :id OR s.acceptUser = :id) AND s.isDisabled = 0';

        $query = $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('id', $id);

        return $query->getResult();
    }

    public function seeAllSuggestions($id)
    {
        $dql = 'SELECT s.id, su.profileImage, su.email FROM AppBundle:Suggestion s JOIN s.suggestUser su 
        WHERE s.acceptUser = :id AND s.isDisabled = 0';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $id);

        $this->seeSuggestion($id);

        return $query->getResult();
    }

    public function seeSuggestion($id)
    {
        $dql = 'UPDATE AppBundle:Suggestion s SET s.isSeen = 1 WHERE s.acceptUser = :id';

        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('id', $id)
            ->execute();
    }

    public function getCountSuggestions($id)
    {
        $dql = 'SELECT COUNT(s) FROM AppBundle:Suggestion s WHERE s.suggestUser = :id AND s.isDisabled = 0';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $id);

        return $query->getSingleResult();
    }

    public function disableSuggestion($id)
    {
        $dql = 'UPDATE AppBundle:Suggestion s SET s.isDisabled = 1 WHERE s.id = :id';

        return $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $id)
                    ->execute();
    }

    public function getUnseenSuggestions($id)
    {
        $dql = 'SELECT COUNT(s.id) FROM AppBundle:Suggestion s WHERE s.isSeen = 0 AND s.acceptUser = :id';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $id);

        return $query->getSingleResult();

    }

    public function getSendAndAcceptSuggestions($id)
    {
        $dql = 'SELECT s.id, ss.id as suggestUser, sa.id acceptUser FROM AppBundle:Suggestion s JOIN s.suggestUser ss JOIN s.acceptUser sa
        WHERE (s.suggestUser = :id OR s.acceptUser = :id) AND s.isDisabled = 0';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $id);

        return $query->getResult();
    }

    public function checkIfExistSuggestion($myId, $targetUserId)
    {
        $dql = 'SELECT s.id FROM AppBundle:Suggestion s 
        WHERE (s.suggestUser = :id OR s.acceptUser = :id) AND (s.suggestUser = :myId OR s.acceptUser = :myId) AND s.isDisabled = 0';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $targetUserId)
                    ->setParameter('myId', $myId);

        return $query->getOneOrNullResult();
    }

    public function getSendFromMeSuggestions($myId)
    {
        $dql = 'SELECT s.id, sa.id as acceptUser FROM AppBundle:Suggestion s JOIN s.acceptUser sa
                WHERE s.suggestUser = :myId AND s.isDisabled = 0';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('myId', $myId);

        return $query->getResult();
    }

    public function getSuggestionsToMe($myId)
    {
        $dql = 'SELECT s.id, ss.id as sendUser FROM AppBundle:Suggestion s JOIN s.suggestUser ss
                WHERE s.acceptUser = :myId AND s.isDisabled = 0';

        $query = $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('myId', $myId);

        return $query->getResult();
    }
}
