<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{

    public function findUsersBySearch($numberSearch, $friendsId)
    {
        $firstResult = $numberSearch * 20 - 20;

        $dql = 'SELECT u FROM AppBundle:User u WHERE ';

        for ($i = 0; $i < count($friendsId); $i++) {
            if ( $i < count($friendsId) - 1 ) {
                $dql = $dql . ' u.id <> ' . $friendsId[$i] . ' AND ';
            }else {
                $dql = $dql . ' u.id <> ' . $friendsId[$i];
            }
        }

        $query = $this->getEntityManager()->createQuery($dql)
            ->setFirstResult($firstResult)
            ->setMaxResults(20);

        return $query->getResult();
    }

    public function getCountUsers()
    {
        $dql = 'SELECT COUNT(u) FROM AppBundle:User u';

        $query = $this->getEntityManager()
            ->createQuery($dql);

        return $query->getSingleResult();
    }

    public function getUserWithFriends($id)
    {
        $dql = 'SELECT u, uf FROM AppBundle:User u LEFT JOIN u.myFriends uf WHERE u.id = :id';

        $query = $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('id', $id);

        return $query->getOneOrNullResult();
    }

    public function getFullUser($id)
    {
        $dql = 'SELECT u, uf, um FROM AppBundle:User u JOIN u.myFriends um JOIN u.friendsWithMe uf WHERE u.id = :id';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $id);

        return $query->getOneOrNullResult();
    }

    public function getUserWithFriendsAndMessages($id)
    {
        $dql = 'SELECT uf.id, uf.profileImage, uf.firstName, uf.lastName, mf.id, mf.profileImage, mf.firstName, mf.lastName
                FROM AppBundle:User u LEFT JOIN u.friendsWithMe uf LEFT JOIN u.myFriends mf
                WHERE u.id = :id';

        $query = $this->getEntityManager()
                        ->createQuery($dql)
                        ->setParameter('id', $id);

        return $query->getResult();
    }

    public function getLastUserId()
    {
        $dql = 'SELECT u.id FROM AppBundle:User u ORDER BY u.id DESC';

        $query = $this->getEntityManager()
                        ->createQuery($dql)
                        ->setMaxResults(1);

        return $query->getOneOrNullResult();
    }

    public function findUsersByEmailOrName($name, $list)
    {
        $firstResult = $list * 20 - 20;

        $dql = 'SELECT u.id, u.fullName, u.profileImage FROM AppBundle:User u WHERE u.fullName LIKE :name OR u.email LIKE :name';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setFirstResult($firstResult)
                    ->setMaxResults(21)
                    ->setParameter('name', $name . '%');

        return $query->getResult();
    }

    public function getUser($id)
    {
        $dql = 'SELECT u.id, u.profileImage, u.firstName, u.lastName, u.birthDate, u.phone, u.email FROM AppBundle:User u  WHERE u.id = :id';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $id);

        return $query->getSingleResult();
    }
}
