<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{

    public function findUsersBySearch($numberSearch, $friendsId)
    {
        $firstResult = $numberSearch * 20 - 20;

        $dql = 'SELECT u FROM AppBundle:User u WHERE ';

        for ($i = 0; $i < count($friendsId); $i++) {
            if ( $i < count($friendsId) - 1 ) {
                $dql = $dql . ' u.id <> ' . $friendsId[$i] . ' AND ';
            }else {
                $dql = $dql . ' u.id <> ' . $friendsId[$i];
            }
        }

        $query = $this->getEntityManager()->createQuery($dql)
            ->setFirstResult($firstResult)
            ->setMaxResults(20);

        return $query->getResult();
    }

    public function getCountUsers()
    {
        $dql = 'SELECT COUNT(u) FROM AppBundle:User u';

        $query = $this->getEntityManager()
            ->createQuery($dql);

        return $query->getSingleResult();
    }

    public function getUserWithFriends($id)
    {
        $dql = 'SELECT u, uf FROM AppBundle:User u LEFT JOIN u.myFriends uf WHERE u.id = :id';

        $query = $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('id', $id);

        return $query->getOneOrNullResult();
    }

    public function getFullUser($id)
    {
        $dql = 'SELECT u, um, uf FROM AppBundle:User u LEFT JOIN u.myFriends um LEFT JOIN u.friendsWithMe uf WHERE u.id = :id';

        $query = $this->getEntityManager()
                    ->createQuery($dql)
                    ->setParameter('id', $id);

        return $query->getOneOrNullResult();
    }
}
